package com.example.demo.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

/**
  * @author braska
  * @date 2018/06/25.
  **/
 @EnableAutoConfiguration
 @EnableZuulProxy
 @ComponentScan(basePackages = {
         "com.syher.zuul.core",
         "com.syher.zuul.service"
 })
 public class SpringBootZuulApplication implements CommandLineRunner {
     @Autowired
     ApplicationEventPublisher publisher;
     @Autowired
     RouteLocator routeLocator;

     private ScheduledExecutorService executor;
     private Long lastModified = 0L;
    private boolean instance = true;
 
   public static void main(String[] args) {
        SpringApplication.run(SpringBootZuulApplication.class, args);
     }
 
     @Override
     public void run(String... args) throws Exception {
         executor = Executors.newSingleThreadScheduledExecutor(
                 new ThreadFactoryBuilder().setNameFormat("properties read.").build()
         );
         executor.scheduleWithFixedDelay(() -> publish(), 0, 1, TimeUnit.SECONDS);
     }
 
     private void publish() {
         if (isPropertiesModified()) {
             publisher.publishEvent(new RoutesRefreshedEvent(routeLocator));
         }
     }

     private boolean isPropertiesModified() {
        File file = new File(this.getClass().getClassLoader().getResource(PropertiesRouter.PROPERTIES_FILE).getPath());
         if (instance) {
            instance = false;
             return false;
         }
         if (file.lastModified() > lastModified) {
             lastModified = file.lastModified();
            return true;
         }
         return false;
     }
 }